# Generated by Django 5.1.3 on 2024-11-28 13:07

import django.core.validators
import django.db.models.deletion
import ventasapp.validadores
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Clientes',
            fields=[
                ('cedula', models.CharField(max_length=10, primary_key=True, serialize=False, unique=True, validators=[django.core.validators.MaxLengthValidator(10), ventasapp.validadores.validacion_numeros])),
                ('nombre', models.CharField(max_length=50, validators=[ventasapp.validadores.Validacion_letras], verbose_name='Nombre del cliente : ')),
                ('apellido', models.CharField(max_length=50, validators=[ventasapp.validadores.Validacion_letras])),
                ('telefono', models.CharField(max_length=10, validators=[ventasapp.validadores.validacion_numeros])),
                ('email', models.EmailField(max_length=254, unique=True, validators=[django.core.validators.RegexValidator(message='el campo solo debe contener letras y espacios', regex='^[a-zA-Z0-9,-ó\\s]+$')])),
                ('direccion', models.TextField(validators=[django.core.validators.RegexValidator(message='el campo solo debe contener letras y espacios', regex='^[a-zA-Z0-9,-ó\\s]+$')])),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('Fecha_nacimiento', models.DateField(validators=[ventasapp.validadores.validar_fecha_nacimiento])),
            ],
            options={
                'verbose_name': 'ingresa los datos del Cliente :',
                'verbose_name_plural': 'datos Clientes',
                'db_table': 'Clientes',
            },
        ),
        migrations.CreateModel(
            name='Empleados',
            fields=[
                ('cedula', models.CharField(max_length=10, primary_key=True, serialize=False, unique=True, validators=[ventasapp.validadores.validacion_numeros], verbose_name='Cedula del Empleado :')),
                ('nombre', models.CharField(max_length=50, validators=[ventasapp.validadores.Validacion_letras], verbose_name='Nombre del Empleado : ')),
                ('apellido', models.CharField(max_length=50, validators=[ventasapp.validadores.Validacion_letras])),
                ('telefono', models.CharField(max_length=10, validators=[ventasapp.validadores.validacion_numeros])),
                ('email', models.EmailField(max_length=254, unique=True, validators=[django.core.validators.RegexValidator(message='el campo solo debe contener letras y espacios', regex='^[a-zA-Z0-9,-ó\\s]+$')])),
                ('direccion', models.TextField(validators=[django.core.validators.RegexValidator(message='el campo solo debe contener letras y espacios', regex='^[a-zA-Z0-9,-ó\\s]+$')])),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('fecha_nacimiento', models.DateField(validators=[ventasapp.validadores.validar_fecha_nacimiento])),
            ],
            options={
                'verbose_name': 'Empleado :',
                'verbose_name_plural': 'Empleados',
                'db_table': 'Empleados',
            },
        ),
        migrations.CreateModel(
            name='Empresas',
            fields=[
                ('ruc', models.CharField(max_length=13, primary_key=True, serialize=False, unique=True, validators=[ventasapp.validadores.validacion_numeros])),
                ('nombre', models.CharField(max_length=50, validators=[ventasapp.validadores.Validacion_letras], verbose_name='Nombre de la empresa : ')),
                ('direccion', models.TextField(validators=[django.core.validators.RegexValidator(message='el campo solo debe contener letras y espacios', regex='^[a-zA-Z0-9,-ó\\s]+$')])),
                ('telefono', models.CharField(max_length=10, validators=[ventasapp.validadores.validacion_numeros])),
                ('email', models.EmailField(max_length=254, unique=True, validators=[django.core.validators.RegexValidator(message='el campo solo debe contener letras y espacios', regex='^[a-zA-Z0-9,-ó\\s]+$')])),
            ],
            options={
                'verbose_name': 'Empresa :',
                'verbose_name_plural': 'Empresas',
                'db_table': 'Empresas',
            },
        ),
        migrations.CreateModel(
            name='Productos',
            fields=[
                ('codigo', models.CharField(max_length=10, primary_key=True, serialize=False, unique=True, validators=[django.core.validators.MaxLengthValidator(10), ventasapp.validadores.validacion_numeros])),
                ('nombre', models.CharField(max_length=50, validators=[ventasapp.validadores.Validacion_letras], verbose_name=' Nombre del producto : ')),
                ('marca', models.CharField(max_length=50, unique=True, validators=[ventasapp.validadores.Validacion_letras])),
                ('caracteristicas_categoria', models.CharField(choices=[('Bebidas', 'Bebidas'), ('Comidas', 'Comidas'), ('Limpieza', 'Limpieza'), ('Ropa', 'Ropa'), ('Varios', 'Varios')], max_length=100, validators=[django.core.validators.RegexValidator(message='el campo solo debe contener letras y espacios', regex='^[a-zA-Z0-9,-ó\\s]+$')])),
                ('precio', models.DecimalField(decimal_places=2, help_text='ingresa valores con decimales', max_digits=10, validators=[ventasapp.validadores.validacion_numeros], verbose_name='Precio del producto : ')),
                ('cantidad_stock', models.IntegerField(validators=[ventasapp.validadores.validacion_numeros], verbose_name='Cantidad en stock : ')),
                ('fecha_ingreso', models.DateTimeField(auto_now_add=True)),
                ('fecha_elaboracion', models.DateField(blank=True)),
                ('fecha_vencimiento', models.DateField(default='2024-01-01')),
            ],
            options={
                'verbose_name': 'Producto :',
                'verbose_name_plural': 'Productos',
                'db_table': 'Productos',
            },
        ),
        migrations.CreateModel(
            name='Factura',
            fields=[
                ('codigo_factura', models.AutoField(primary_key=True, serialize=False)),
                ('fecha_factura', models.DateTimeField(auto_now_add=True)),
                ('cantidad', models.IntegerField()),
                ('subtotal', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('iva', models.DecimalField(decimal_places=2, default=0, editable=False, max_digits=10)),
                ('total', models.DecimalField(decimal_places=2, default=0, editable=False, max_digits=10)),
                ('cliente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ventasapp.clientes')),
                ('empleado', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ventasapp.empleados')),
                ('producto', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ventasapp.productos')),
            ],
            options={
                'verbose_name': 'Factura',
                'verbose_name_plural': 'Facturas',
                'db_table': 'Facturas',
            },
        ),
        migrations.CreateModel(
            name='Proveedores',
            fields=[
                ('cedula', models.CharField(max_length=10, primary_key=True, serialize=False, unique=True, validators=[django.core.validators.MaxLengthValidator(10), ventasapp.validadores.validacion_numeros])),
                ('nombre', models.CharField(max_length=50, validators=[ventasapp.validadores.Validacion_letras], verbose_name='Nombre del proveedor : ')),
                ('apellido', models.CharField(max_length=50, validators=[ventasapp.validadores.Validacion_letras])),
                ('telefono', models.CharField(max_length=10, validators=[ventasapp.validadores.validacion_numeros])),
                ('email', models.EmailField(max_length=254, unique=True, validators=[django.core.validators.RegexValidator(message='el campo solo debe contener letras y espacios', regex='^[a-zA-Z0-9,-ó\\s]+$')])),
                ('empresa', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ventasapp.empresas')),
            ],
            options={
                'verbose_name': 'Proveedor ',
                'verbose_name_plural': 'Proveedores',
                'db_table': 'Proveedores',
            },
        ),
    ]
